{
	"id": "5146c9bb3911a695856abbbc56396927",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"ZombieFactory.sol": {
				"content": "pragma solidity >=0.5.0 <0.6.0;\n\nimport \"./ownable.sol\";\n\ncontract ZombieFactory is Ownable {\n\n    event NewZombie(uint zombieId, string name, uint dna);\n\n    uint dnaDigits = 16;\n    uint dnaModulus = 10 ** dnaDigits;\n\n    struct Zombie {\n        string name;\n        uint dna;\n    }\n\n    mapping (uint => address) public zombieToOwner ;\n    mapping (address => uint) ownerZombieCount ;\n\n    Zombie[] public zombies;\n\n    function _createZombie(string memory _name, uint _dna) internal {\n        uint id = zombies.push(Zombie(_name, _dna)) - 1;\n        zombieToOwner[id] = msg.sender;\n        ownerZombieCount[msg.sender]++;\n        emit NewZombie(id, _name, _dna);\n    }\n\n    function _generateRandomDna(string memory _str) private view returns (uint){\n        uint rand = uint(keccak256(abi.encodePacked(_str)));\n        return  rand % dnaModulus;\n    }\n\n    function createRandomZombie(string memory _name) public {\n        require(ownerZombieCount[msg.sender]==0);\n        uint randDna = _generateRandomDna(_name);\n        _createZombie(_name, randDna);\n    }\n\n\n}"
			},
			"ownable.sol": {
				"content": "pragma solidity >=0.5.0 <0.6.0;\n\n/**\n* @title Ownable\n* @dev The Ownable contract has an owner address, and provides basic authorization control\n* functions, this simplifies the implementation of \"user permissions\".\n*/\ncontract Ownable {\n  address private _owner;\n\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n  /**\n  * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n  * account.\n  */\n  constructor() internal {\n    _owner = msg.sender;\n    emit OwnershipTransferred(address(0), _owner);\n  }\n\n  /**\n  * @return the address of the owner.\n  */\n  function owner() public view returns(address) {\n    return _owner;\n  }\n\n  /**\n  * @dev Throws if called by any account other than the owner.\n  */\n  modifier onlyOwner() {\n    require(isOwner());\n    _;\n  }\n\n  /**\n  * @return true if `msg.sender` is the owner of the contract.\n  */\n  function isOwner() public view returns(bool) {\n    return msg.sender == _owner;\n  }\n\n  /**\n  * @dev Allows the current owner to relinquish control of the contract.\n  * @notice Renouncing to ownership will leave the contract without an owner.\n  * It will not be possible to call the functions with the `onlyOwner`\n  * modifier anymore.\n  */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n  * @dev Allows the current owner to transfer control of the contract to a newOwner.\n  * @param newOwner The address to transfer ownership to.\n  */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n  * @dev Transfers control of the contract to a newOwner.\n  * @param newOwner The address to transfer ownership to.\n  */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"ZombieFactory.sol": {
				"ZombieFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "zombieId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "dna",
									"type": "uint256"
								}
							],
							"name": "NewZombie",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "createRandomZombie",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "zombieToOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "zombies",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "dna",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"isOwner()": {
								"return": "true if `msg.sender` is the owner of the contract."
							},
							"owner()": {
								"return": "the address of the owner."
							},
							"renounceOwnership()": {
								"details": "Allows the current owner to relinquish control of the contract."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"ZombieFactory.sol\":58:1068  contract ZombieFactory is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"ZombieFactory.sol\":176:178  16 */\n  0x10\n    /* \"ZombieFactory.sol\":159:178  uint dnaDigits = 16 */\n  0x01\n  sstore\n    /* \"ZombieFactory.sol\":208:217  dnaDigits */\n  sload(0x01)\n    /* \"ZombieFactory.sol\":202:204  10 */\n  0x0a\n    /* \"ZombieFactory.sol\":202:217  10 ** dnaDigits */\n  exp\n    /* \"ZombieFactory.sol\":184:217  uint dnaModulus = 10 ** dnaDigits */\n  0x02\n  sstore\n    /* \"ownable.sol\":518:528  msg.sender */\n  caller\n    /* \"ownable.sol\":509:515  _owner */\n  0x00\n  dup1\n    /* \"ownable.sol\":509:528  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ownable.sol\":572:578  _owner */\n  0x00\n  dup1\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ownable.sol\":539:579  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ownable.sol\":568:569  0 */\n  0x00\n    /* \"ownable.sol\":539:579  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ZombieFactory.sol\":58:1068  contract ZombieFactory is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ZombieFactory.sol\":58:1068  contract ZombieFactory is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ZombieFactory.sol\":58:1068  contract ZombieFactory is Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7bff0a01\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x7bff0a01\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x2052465e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x528b7b8f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ZombieFactory.sol\":393:416  Zombie[] public zombies */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"ZombieFactory.sol\":393:416  Zombie[] public zombies */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_14:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_14)\n    tag_16:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"ZombieFactory.sol\":393:416  Zombie[] public zombies */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_17\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_17:\n      pop\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ZombieFactory.sol\":290:336  mapping (uint => address) public zombieToOwner */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n        /* \"ZombieFactory.sol\":290:336  mapping (uint => address) public zombieToOwner */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ownable.sol\":1262:1389  function renounceOwnership() public onlyOwner {... */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"ZombieFactory.sol\":862:1064  function createRandomZombie(string memory _name) public {... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"ZombieFactory.sol\":862:1064  function createRandomZombie(string memory _name) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"ZombieFactory.sol\":862:1064  function createRandomZombie(string memory _name) public {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"ZombieFactory.sol\":862:1064  function createRandomZombie(string memory _name) public {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_27:\n        /* \"ZombieFactory.sol\":862:1064  function createRandomZombie(string memory _name) public {... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"ZombieFactory.sol\":862:1064  function createRandomZombie(string memory _name) public {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_23:\n      stop\n        /* \"ownable.sol\":637:707  function owner() public view returns(address) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ownable.sol\":920:1003  function isOwner() public view returns(bool) {... */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ownable.sol\":1547:1648  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"ownable.sol\":1547:1648  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"ZombieFactory.sol\":393:416  Zombie[] public zombies */\n    tag_13:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_38\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_39\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_38)\n    tag_39:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_40:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_40\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"ZombieFactory.sol\":290:336  mapping (uint => address) public zombieToOwner */\n    tag_20:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ownable.sol\":1262:1389  function renounceOwnership() public onlyOwner {... */\n    tag_22:\n        /* \"ownable.sol\":820:829  isOwner() */\n      tag_42\n        /* \"ownable.sol\":820:827  isOwner */\n      tag_32\n        /* \"ownable.sol\":820:829  isOwner() */\n      jump\t// in\n    tag_42:\n        /* \"ownable.sol\":812:830  require(isOwner()) */\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n        /* \"ownable.sol\":1356:1357  0 */\n      0x00\n        /* \"ownable.sol\":1319:1359  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable.sol\":1340:1346  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable.sol\":1319:1359  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ownable.sol\":1382:1383  0 */\n      0x00\n        /* \"ownable.sol\":1365:1371  _owner */\n      dup1\n      0x00\n        /* \"ownable.sol\":1365:1384  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ownable.sol\":1262:1389  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"ZombieFactory.sol\":862:1064  function createRandomZombie(string memory _name) public {... */\n    tag_28:\n        /* \"ZombieFactory.sol\":966:967  0 */\n      0x00\n        /* \"ZombieFactory.sol\":936:952  ownerZombieCount */\n      0x04\n        /* \"ZombieFactory.sol\":936:964  ownerZombieCount[msg.sender] */\n      0x00\n        /* \"ZombieFactory.sol\":953:963  msg.sender */\n      caller\n        /* \"ZombieFactory.sol\":936:964  ownerZombieCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ZombieFactory.sol\":936:967  ownerZombieCount[msg.sender]==0 */\n      eq\n        /* \"ZombieFactory.sol\":928:968  require(ownerZombieCount[msg.sender]==0) */\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n        /* \"ZombieFactory.sol\":978:990  uint randDna */\n      0x00\n        /* \"ZombieFactory.sol\":993:1018  _generateRandomDna(_name) */\n      tag_47\n        /* \"ZombieFactory.sol\":1012:1017  _name */\n      dup3\n        /* \"ZombieFactory.sol\":993:1011  _generateRandomDna */\n      tag_48\n        /* \"ZombieFactory.sol\":993:1018  _generateRandomDna(_name) */\n      jump\t// in\n    tag_47:\n        /* \"ZombieFactory.sol\":978:1018  uint randDna = _generateRandomDna(_name) */\n      swap1\n      pop\n        /* \"ZombieFactory.sol\":1028:1057  _createZombie(_name, randDna) */\n      tag_49\n        /* \"ZombieFactory.sol\":1042:1047  _name */\n      dup3\n        /* \"ZombieFactory.sol\":1049:1056  randDna */\n      dup3\n        /* \"ZombieFactory.sol\":1028:1041  _createZombie */\n      tag_50\n        /* \"ZombieFactory.sol\":1028:1057  _createZombie(_name, randDna) */\n      jump\t// in\n    tag_49:\n        /* \"ZombieFactory.sol\":862:1064  function createRandomZombie(string memory _name) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ownable.sol\":637:707  function owner() public view returns(address) {... */\n    tag_30:\n        /* \"ownable.sol\":674:681  address */\n      0x00\n        /* \"ownable.sol\":696:702  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable.sol\":689:702  return _owner */\n      swap1\n      pop\n        /* \"ownable.sol\":637:707  function owner() public view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"ownable.sol\":920:1003  function isOwner() public view returns(bool) {... */\n    tag_32:\n        /* \"ownable.sol\":959:963  bool */\n      0x00\n        /* \"ownable.sol\":992:998  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable.sol\":978:998  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable.sol\":978:988  msg.sender */\n      caller\n        /* \"ownable.sol\":978:998  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ownable.sol\":971:998  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"ownable.sol\":920:1003  function isOwner() public view returns(bool) {... */\n      swap1\n      jump\t// out\n        /* \"ownable.sol\":1547:1648  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_35:\n        /* \"ownable.sol\":820:829  isOwner() */\n      tag_54\n        /* \"ownable.sol\":820:827  isOwner */\n      tag_32\n        /* \"ownable.sol\":820:829  isOwner() */\n      jump\t// in\n    tag_54:\n        /* \"ownable.sol\":812:830  require(isOwner()) */\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n        /* \"ownable.sol\":1615:1643  _transferOwnership(newOwner) */\n      tag_57\n        /* \"ownable.sol\":1634:1642  newOwner */\n      dup2\n        /* \"ownable.sol\":1615:1633  _transferOwnership */\n      tag_58\n        /* \"ownable.sol\":1615:1643  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_57:\n        /* \"ownable.sol\":1547:1648  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ZombieFactory.sol\":678:856  function _generateRandomDna(string memory _str) private view returns (uint){... */\n    tag_48:\n        /* \"ZombieFactory.sol\":748:752  uint */\n      0x00\n        /* \"ZombieFactory.sol\":763:772  uint rand */\n      dup1\n        /* \"ZombieFactory.sol\":807:811  _str */\n      dup3\n        /* \"ZombieFactory.sol\":790:812  abi.encodePacked(_str) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_60:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_60)\n    tag_62:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"ZombieFactory.sol\":790:812  abi.encodePacked(_str) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"ZombieFactory.sol\":790:812  abi.encodePacked(_str) */\n      swap1\n      0x40\n      mstore\n        /* \"ZombieFactory.sol\":780:813  keccak256(abi.encodePacked(_str)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"ZombieFactory.sol\":775:814  uint(keccak256(abi.encodePacked(_str))) */\n      0x00\n      shr\n        /* \"ZombieFactory.sol\":763:814  uint rand = uint(keccak256(abi.encodePacked(_str))) */\n      swap1\n      pop\n        /* \"ZombieFactory.sol\":839:849  dnaModulus */\n      sload(0x02)\n        /* \"ZombieFactory.sol\":832:836  rand */\n      dup2\n        /* \"ZombieFactory.sol\":832:849  rand % dnaModulus */\n      dup2\n      tag_63\n      jumpi\n      invalid\n    tag_63:\n      mod\n        /* \"ZombieFactory.sol\":824:849  return  rand % dnaModulus */\n      swap2\n      pop\n      pop\n        /* \"ZombieFactory.sol\":678:856  function _generateRandomDna(string memory _str) private view returns (uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ZombieFactory.sol\":423:672  function _createZombie(string memory _name, uint _dna) internal {... */\n    tag_50:\n        /* \"ZombieFactory.sol\":497:504  uint id */\n      0x00\n        /* \"ZombieFactory.sol\":543:544  1 */\n      0x01\n        /* \"ZombieFactory.sol\":507:514  zombies */\n      0x05\n        /* \"ZombieFactory.sol\":520:539  Zombie(_name, _dna) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"ZombieFactory.sol\":527:532  _name */\n      dup7\n        /* \"ZombieFactory.sol\":520:539  Zombie(_name, _dna) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ZombieFactory.sol\":534:538  _dna */\n      dup6\n        /* \"ZombieFactory.sol\":520:539  Zombie(_name, _dna) */\n      dup2\n      mstore\n      pop\n        /* \"ZombieFactory.sol\":507:540  zombies.push(Zombie(_name, _dna)) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"ZombieFactory.sol\":507:540  zombies.push(Zombie(_name, _dna)) */\n      swap1\n      0x01\n      dup3\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_66\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"ZombieFactory.sol\":507:544  zombies.push(Zombie(_name, _dna)) - 1 */\n      sub\n        /* \"ZombieFactory.sol\":497:544  uint id = zombies.push(Zombie(_name, _dna)) - 1 */\n      swap1\n      pop\n        /* \"ZombieFactory.sol\":574:584  msg.sender */\n      caller\n        /* \"ZombieFactory.sol\":554:567  zombieToOwner */\n      0x03\n        /* \"ZombieFactory.sol\":554:571  zombieToOwner[id] */\n      0x00\n        /* \"ZombieFactory.sol\":568:570  id */\n      dup4\n        /* \"ZombieFactory.sol\":554:571  zombieToOwner[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ZombieFactory.sol\":554:584  zombieToOwner[id] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ZombieFactory.sol\":594:610  ownerZombieCount */\n      0x04\n        /* \"ZombieFactory.sol\":594:622  ownerZombieCount[msg.sender] */\n      0x00\n        /* \"ZombieFactory.sol\":611:621  msg.sender */\n      caller\n        /* \"ZombieFactory.sol\":594:622  ownerZombieCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ZombieFactory.sol\":594:624  ownerZombieCount[msg.sender]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"ZombieFactory.sol\":639:665  NewZombie(id, _name, _dna) */\n      0x88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b7\n        /* \"ZombieFactory.sol\":649:651  id */\n      dup2\n        /* \"ZombieFactory.sol\":653:658  _name */\n      dup5\n        /* \"ZombieFactory.sol\":660:664  _dna */\n      dup5\n        /* \"ZombieFactory.sol\":639:665  NewZombie(id, _name, _dna) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_68:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_68)\n    tag_70:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"ZombieFactory.sol\":639:665  NewZombie(id, _name, _dna) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_71\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_71:\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ZombieFactory.sol\":423:672  function _createZombie(string memory _name, uint _dna) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ownable.sol\":1779:1948  function _transferOwnership(address newOwner) internal {... */\n    tag_58:\n        /* \"ownable.sol\":1868:1869  0 */\n      0x00\n        /* \"ownable.sol\":1848:1870  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable.sol\":1848:1856  newOwner */\n      dup2\n        /* \"ownable.sol\":1848:1870  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ownable.sol\":1840:1871  require(newOwner != address(0)) */\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n        /* \"ownable.sol\":1911:1919  newOwner */\n      dup1\n        /* \"ownable.sol\":1882:1920  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable.sol\":1903:1909  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownable.sol\":1882:1920  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ownable.sol\":1935:1943  newOwner */\n      dup1\n        /* \"ownable.sol\":1926:1932  _owner */\n      0x00\n      dup1\n        /* \"ownable.sol\":1926:1943  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ownable.sol\":1779:1948  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"ZombieFactory.sol\":58:1068  contract ZombieFactory is Ownable {... */\n    tag_67:\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      0x1f\n      lt\n      tag_75\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_74)\n    tag_75:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_74\n      jumpi\n      swap2\n      dup3\n      add\n    tag_76:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_77\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_76)\n    tag_77:\n    tag_74:\n      pop\n      swap1\n      pop\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      pop\n      swap1\n      jump\t// out\n    tag_79:\n      tag_80\n      swap2\n      swap1\n    tag_81:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_81)\n    tag_82:\n      pop\n      swap1\n      jump\n    tag_80:\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a7231582081e480f01b44d30158ed8e648b4037c0f30fd7bb64f41e85a069d633df5e5a8f64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526010600155600154600a0a600255336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610a07806100dd6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637bff0a011161005b5780637bff0a01146101a85780638da5cb5b146102635780638f32d59b146102ad578063f2fde38b146102cf5761007d565b80632052465e14610082578063528b7b8f14610130578063715018a61461019e575b600080fd5b6100ae6004803603602081101561009857600080fd5b8101908080359060200190929190505050610313565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156100f45780820151818401526020810190506100d9565b50505050905090810190601f1680156101215780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61015c6004803603602081101561014657600080fd5b81019080803590602001909291905050506103dc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a661040f565b005b610261600480360360208110156101be57600080fd5b81019080803590602001906401000000008111156101db57600080fd5b8201836020820111156101ed57600080fd5b8035906020019184600183028401116401000000008311171561020f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506104df565b005b61026b610546565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b561056f565b604051808215151515815260200191505060405180910390f35b610311600480360360208110156102e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105c6565b005b6005818154811061032057fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103cc5780601f106103a1576101008083540402835291602001916103cc565b820191906000526020600020905b8154815290600101906020018083116103af57829003601f168201915b5050505050908060010154905082565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61041761056f565b61042057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461052b57600080fd5b6000610536826105e3565b90506105428282610671565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6105ce61056f565b6105d757600080fd5b6105e081610835565b50565b600080826040516020018082805190602001908083835b6020831061061d57805182526020820191506020810190506020830392506105fa565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c9050600254818161066857fe5b06915050919050565b6000600160056040518060400160405280868152602001858152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906106d392919061092d565b50602082015181600101555050039050336003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156107f45780820151818401526020810190506107d9565b50505050905090810190601f1680156108215780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561086f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061096e57805160ff191683800117855561099c565b8280016001018555821561099c579182015b8281111561099b578251825591602001919060010190610980565b5b5090506109a991906109ad565b5090565b6109cf91905b808211156109cb5760008160009055506001016109b3565b5090565b9056fea265627a7a7231582081e480f01b44d30158ed8e648b4037c0f30fd7bb64f41e85a069d633df5e5a8f64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x10 PUSH1 0x1 SSTORE PUSH1 0x1 SLOAD PUSH1 0xA EXP PUSH1 0x2 SSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA07 DUP1 PUSH2 0xDD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BFF0A01 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7BFF0A01 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2CF JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2052465E EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x528B7B8F EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x121 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x4DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x320 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x3CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x417 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x536 DUP3 PUSH2 0x5E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x542 DUP3 DUP3 PUSH2 0x671 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x56F JUMP JUMPDEST PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E0 DUP2 PUSH2 0x835 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x61D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x2 SLOAD DUP2 DUP2 PUSH2 0x668 JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x6D3 SWAP3 SWAP2 SWAP1 PUSH2 0x92D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP SUB SWAP1 POP CALLER PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH32 0x88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7F4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7D9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x821 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x96E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x99C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x99C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x99B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x980 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x9A9 SWAP2 SWAP1 PUSH2 0x9AD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x9CF SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x9CB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x9B3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP2 0xE4 DUP1 CREATE SHL DIFFICULTY 0xD3 ADD PC 0xED DUP15 PUSH5 0x8B4037C0F3 0xF 0xD7 0xBB PUSH5 0xF41E85A069 0xD6 CALLER 0xDF 0x5E GAS DUP16 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "58:1010:0:-;;;176:2;159:19;;208:9;;202:2;:15;184:33;;518:10:1;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;58:1010:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80637bff0a011161005b5780637bff0a01146101a85780638da5cb5b146102635780638f32d59b146102ad578063f2fde38b146102cf5761007d565b80632052465e14610082578063528b7b8f14610130578063715018a61461019e575b600080fd5b6100ae6004803603602081101561009857600080fd5b8101908080359060200190929190505050610313565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156100f45780820151818401526020810190506100d9565b50505050905090810190601f1680156101215780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61015c6004803603602081101561014657600080fd5b81019080803590602001909291905050506103dc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a661040f565b005b610261600480360360208110156101be57600080fd5b81019080803590602001906401000000008111156101db57600080fd5b8201836020820111156101ed57600080fd5b8035906020019184600183028401116401000000008311171561020f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506104df565b005b61026b610546565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b561056f565b604051808215151515815260200191505060405180910390f35b610311600480360360208110156102e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105c6565b005b6005818154811061032057fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103cc5780601f106103a1576101008083540402835291602001916103cc565b820191906000526020600020905b8154815290600101906020018083116103af57829003601f168201915b5050505050908060010154905082565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61041761056f565b61042057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461052b57600080fd5b6000610536826105e3565b90506105428282610671565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6105ce61056f565b6105d757600080fd5b6105e081610835565b50565b600080826040516020018082805190602001908083835b6020831061061d57805182526020820191506020810190506020830392506105fa565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c9050600254818161066857fe5b06915050919050565b6000600160056040518060400160405280868152602001858152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906106d392919061092d565b50602082015181600101555050039050336003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156107f45780820151818401526020810190506107d9565b50505050905090810190601f1680156108215780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561086f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061096e57805160ff191683800117855561099c565b8280016001018555821561099c579182015b8281111561099b578251825591602001919060010190610980565b5b5090506109a991906109ad565b5090565b6109cf91905b808211156109cb5760008160009055506001016109b3565b5090565b9056fea265627a7a7231582081e480f01b44d30158ed8e648b4037c0f30fd7bb64f41e85a069d633df5e5a8f64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BFF0A01 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7BFF0A01 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2CF JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2052465E EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x528B7B8F EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x121 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x4DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x320 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x3CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x417 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x536 DUP3 PUSH2 0x5E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x542 DUP3 DUP3 PUSH2 0x671 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x56F JUMP JUMPDEST PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E0 DUP2 PUSH2 0x835 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x61D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x2 SLOAD DUP2 DUP2 PUSH2 0x668 JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x6D3 SWAP3 SWAP2 SWAP1 PUSH2 0x92D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP SUB SWAP1 POP CALLER PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH32 0x88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7F4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7D9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x821 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x96E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x99C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x99C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x99B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x980 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x9A9 SWAP2 SWAP1 PUSH2 0x9AD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x9CF SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x9CB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x9B3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP2 0xE4 DUP1 CREATE SHL DIFFICULTY 0xD3 ADD PC 0xED DUP15 PUSH5 0x8B4037C0F3 0xF 0xD7 0xBB PUSH5 0xF41E85A069 0xD6 CALLER 0xDF 0x5E GAS DUP16 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "58:1010:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;58:1010:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;393:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;393:23:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;393:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;290:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;290:46:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1262:127:1;;;:::i;:::-;;862:202:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;862:202:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;862:202:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;862:202:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;862:202:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;862:202:0;;;;;;;;;;;;;;;:::i;:::-;;637:70:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;920:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1547:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1547:101:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;393:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;290:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;1262:127:1:-;820:9;:7;:9::i;:::-;812:18;;;;;;1356:1;1319:40;;1340:6;;;;;;;;;;;1319:40;;;;;;;;;;;;1382:1;1365:6;;:19;;;;;;;;;;;;;;;;;;1262:127::o;862:202:0:-;966:1;936:16;:28;953:10;936:28;;;;;;;;;;;;;;;;:31;928:40;;;;;;978:12;993:25;1012:5;993:18;:25::i;:::-;978:40;;1028:29;1042:5;1049:7;1028:13;:29::i;:::-;862:202;;:::o;637:70:1:-;674:7;696:6;;;;;;;;;;;689:13;;637:70;:::o;920:83::-;959:4;992:6;;;;;;;;;;;978:20;;:10;:20;;;971:27;;920:83;:::o;1547:101::-;820:9;:7;:9::i;:::-;812:18;;;;;;1615:28;1634:8;1615:18;:28::i;:::-;1547:101;:::o;678:178:0:-;748:4;763:9;807:4;790:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;790:22:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;790:22:0;;;780:33;;;;;;775:39;;763:51;;839:10;;832:4;:17;;;;;;824:25;;;678:178;;;:::o;423:249::-;497:7;543:1;507:7;520:19;;;;;;;;527:5;520:19;;;;534:4;520:19;;;507:33;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;507:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;497:47;;574:10;554:13;:17;568:2;554:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;594:16;:28;611:10;594:28;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;639:26;649:2;653:5;660:4;639:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;639:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;423:249;;;:::o;1779:169:1:-;1868:1;1848:22;;:8;:22;;;;1840:31;;;;;;1911:8;1882:38;;1903:6;;;;;;;;;;;1882:38;;;;;;;;;;;;1935:8;1926:6;;:17;;;;;;;;;;;;;;;;;;1779:169;:::o;58:1010:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "513400",
								"executionCost": "64647",
								"totalCost": "578047"
							},
							"external": {
								"createRandomZombie(string)": "infinite",
								"isOwner()": "1122",
								"owner()": "1083",
								"renounceOwnership()": "24342",
								"transferOwnership(address)": "24520",
								"zombieToOwner(uint256)": "1223",
								"zombies(uint256)": "infinite"
							},
							"internal": {
								"_createZombie(string memory,uint256)": "infinite",
								"_generateRandomDna(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 1068,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 58,
									"end": 1068,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 58,
									"end": 1068,
									"name": "MSTORE"
								},
								{
									"begin": 176,
									"end": 178,
									"name": "PUSH",
									"value": "10"
								},
								{
									"begin": 159,
									"end": 178,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 159,
									"end": 178,
									"name": "SSTORE"
								},
								{
									"begin": 208,
									"end": 217,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 208,
									"end": 217,
									"name": "SLOAD"
								},
								{
									"begin": 202,
									"end": 204,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 202,
									"end": 217,
									"name": "EXP"
								},
								{
									"begin": 184,
									"end": 217,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 184,
									"end": 217,
									"name": "SSTORE"
								},
								{
									"begin": 518,
									"end": 528,
									"name": "CALLER"
								},
								{
									"begin": 509,
									"end": 515,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 509,
									"end": 515,
									"name": "DUP1"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "EXP"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "DUP2"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "SLOAD"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "DUP2"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "MUL"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "NOT"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "AND"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "SWAP1"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "DUP4"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "AND"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "MUL"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "OR"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "SWAP1"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "SSTORE"
								},
								{
									"begin": 509,
									"end": 528,
									"name": "POP"
								},
								{
									"begin": 572,
									"end": 578,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 572,
									"end": 578,
									"name": "DUP1"
								},
								{
									"begin": 572,
									"end": 578,
									"name": "SWAP1"
								},
								{
									"begin": 572,
									"end": 578,
									"name": "SLOAD"
								},
								{
									"begin": 572,
									"end": 578,
									"name": "SWAP1"
								},
								{
									"begin": 572,
									"end": 578,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 572,
									"end": 578,
									"name": "EXP"
								},
								{
									"begin": 572,
									"end": 578,
									"name": "SWAP1"
								},
								{
									"begin": 572,
									"end": 578,
									"name": "DIV"
								},
								{
									"begin": 572,
									"end": 578,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 572,
									"end": 578,
									"name": "AND"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "AND"
								},
								{
									"begin": 568,
									"end": 569,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "AND"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "MLOAD"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "MLOAD"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "DUP1"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "SWAP2"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "SUB"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "SWAP1"
								},
								{
									"begin": 539,
									"end": 579,
									"name": "LOG3"
								},
								{
									"begin": 58,
									"end": 1068,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1068,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 1068,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1068,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1068,
									"name": "CODECOPY"
								},
								{
									"begin": 58,
									"end": 1068,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1068,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582081e480f01b44d30158ed8e648b4037c0f30fd7bb64f41e85a069d633df5e5a8f64736f6c63430005110032",
									".code": [
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "LT"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SHR"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "7BFF0A01"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "GT"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "7BFF0A01"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMP"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "2052465E"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "528B7B8F"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "REVERT"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP3"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MLOAD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP4"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MSTORE"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP3"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SUB"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP3"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MSTORE"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP5"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MLOAD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MSTORE"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MLOAD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP4"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "AND"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ISZERO"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMPI"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP3"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SUB"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MLOAD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP4"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SUB"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "EXP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SUB"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "NOT"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "AND"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MSTORE"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP4"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MLOAD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SUB"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "RETURN"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "DUP2"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "ADD"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SWAP1"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SWAP1"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "ADD"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SWAP1"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SWAP3"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SWAP2"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SWAP1"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "MLOAD"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "AND"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "AND"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "DUP2"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "MSTORE"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "ADD"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SWAP2"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "MLOAD"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SWAP2"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SUB"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SWAP1"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "RETURN"
										},
										{
											"begin": 1262,
											"end": 1389,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1262,
											"end": 1389,
											"name": "JUMPDEST"
										},
										{
											"begin": 1262,
											"end": 1389,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1262,
											"end": 1389,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1262,
											"end": 1389,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1262,
											"end": 1389,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1262,
											"end": 1389,
											"name": "JUMPDEST"
										},
										{
											"begin": 1262,
											"end": 1389,
											"name": "STOP"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP2"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP2"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DIV"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "MUL"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP4"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP3"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP2"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP4"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP2"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP3"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP2"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP3"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "STOP"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "MLOAD"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "DUP3"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "AND"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "DUP2"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "MSTORE"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "ADD"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "SWAP2"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "MLOAD"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "DUP1"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "SWAP2"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "SUB"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "RETURN"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "JUMPDEST"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "JUMPDEST"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "MLOAD"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "DUP3"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "MSTORE"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "ADD"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "MLOAD"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "SUB"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "SWAP1"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "RETURN"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "DUP1"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "DUP2"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "ADD"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "SWAP1"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "DUP1"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "DUP1"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "AND"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "SWAP1"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "ADD"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "SWAP1"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "SWAP3"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "SWAP2"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "SWAP1"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "POP"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "POP"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "POP"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "STOP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SLOAD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "LT"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMPI"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "INVALID"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MSTORE"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "KECCAK256"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MUL"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SLOAD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "AND"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ISZERO"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MUL"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SUB"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "AND"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DIV"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DIV"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MUL"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MLOAD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MSTORE"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP3"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MSTORE"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP3"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SLOAD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "AND"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ISZERO"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MUL"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SUB"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "AND"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DIV"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ISZERO"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMPI"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "LT"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMPI"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP4"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SLOAD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DIV"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MUL"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP4"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MSTORE"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP3"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MSTORE"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "KECCAK256"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SLOAD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "MSTORE"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP4"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "GT"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMPI"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP3"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SUB"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "AND"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP3"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP2"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "ADD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SLOAD"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "DUP3"
										},
										{
											"begin": 393,
											"end": 416,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "MSTORE"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "MSTORE"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "KECCAK256"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SWAP2"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SLOAD"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SWAP1"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "EXP"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "SWAP1"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "DIV"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "AND"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "DUP2"
										},
										{
											"begin": 290,
											"end": 336,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1262,
											"end": 1389,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1262,
											"end": 1389,
											"name": "JUMPDEST"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 820,
											"end": 827,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "JUMPDEST"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "JUMPI"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "REVERT"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "JUMPDEST"
										},
										{
											"begin": 1356,
											"end": 1357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "AND"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "DUP1"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "SWAP1"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "SLOAD"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "SWAP1"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "EXP"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "SWAP1"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "DIV"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "AND"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "AND"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "MLOAD"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "MLOAD"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "DUP1"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "SWAP2"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "SUB"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1359,
											"name": "LOG3"
										},
										{
											"begin": 1382,
											"end": 1383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1371,
											"name": "DUP1"
										},
										{
											"begin": 1365,
											"end": 1371,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "EXP"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "DUP2"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "SLOAD"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "DUP2"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "MUL"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "NOT"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "AND"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "SWAP1"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "DUP4"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "AND"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "MUL"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "OR"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "SWAP1"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "SSTORE"
										},
										{
											"begin": 1365,
											"end": 1384,
											"name": "POP"
										},
										{
											"begin": 1262,
											"end": 1389,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "JUMPDEST"
										},
										{
											"begin": 966,
											"end": 967,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 936,
											"end": 952,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 953,
											"end": 963,
											"name": "CALLER"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "DUP2"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "MSTORE"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "ADD"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "SWAP1"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "DUP2"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "MSTORE"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "ADD"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "KECCAK256"
										},
										{
											"begin": 936,
											"end": 964,
											"name": "SLOAD"
										},
										{
											"begin": 936,
											"end": 967,
											"name": "EQ"
										},
										{
											"begin": 928,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 928,
											"end": 968,
											"name": "JUMPI"
										},
										{
											"begin": 928,
											"end": 968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 928,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 928,
											"end": 968,
											"name": "REVERT"
										},
										{
											"begin": 928,
											"end": 968,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 928,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 978,
											"end": 990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1018,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1012,
											"end": 1017,
											"name": "DUP3"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 993,
											"end": 1018,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 993,
											"end": 1018,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 993,
											"end": 1018,
											"name": "JUMPDEST"
										},
										{
											"begin": 978,
											"end": 1018,
											"name": "SWAP1"
										},
										{
											"begin": 978,
											"end": 1018,
											"name": "POP"
										},
										{
											"begin": 1028,
											"end": 1057,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1042,
											"end": 1047,
											"name": "DUP3"
										},
										{
											"begin": 1049,
											"end": 1056,
											"name": "DUP3"
										},
										{
											"begin": 1028,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1028,
											"end": 1057,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1028,
											"end": 1057,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1028,
											"end": 1057,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1064,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "JUMPDEST"
										},
										{
											"begin": 674,
											"end": 681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "DUP1"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "SWAP1"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "SLOAD"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "SWAP1"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "EXP"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "SWAP1"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "DIV"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "AND"
										},
										{
											"begin": 689,
											"end": 702,
											"name": "SWAP1"
										},
										{
											"begin": 689,
											"end": 702,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "SWAP1"
										},
										{
											"begin": 637,
											"end": 707,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "JUMPDEST"
										},
										{
											"begin": 959,
											"end": 963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 992,
											"end": 998,
											"name": "DUP1"
										},
										{
											"begin": 992,
											"end": 998,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 992,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 992,
											"end": 998,
											"name": "SLOAD"
										},
										{
											"begin": 992,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 992,
											"end": 998,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 992,
											"end": 998,
											"name": "EXP"
										},
										{
											"begin": 992,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 992,
											"end": 998,
											"name": "DIV"
										},
										{
											"begin": 992,
											"end": 998,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 992,
											"end": 998,
											"name": "AND"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "AND"
										},
										{
											"begin": 978,
											"end": 988,
											"name": "CALLER"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "AND"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "EQ"
										},
										{
											"begin": 971,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 971,
											"end": 998,
											"name": "POP"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "SWAP1"
										},
										{
											"begin": 920,
											"end": 1003,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 820,
											"end": 827,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "JUMPDEST"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "JUMPI"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "REVERT"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 812,
											"end": 830,
											"name": "JUMPDEST"
										},
										{
											"begin": 1615,
											"end": 1643,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 1634,
											"end": 1642,
											"name": "DUP2"
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1615,
											"end": 1643,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1643,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 1615,
											"end": 1643,
											"name": "JUMPDEST"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "POP"
										},
										{
											"begin": 1547,
											"end": 1648,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 678,
											"end": 856,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 678,
											"end": 856,
											"name": "JUMPDEST"
										},
										{
											"begin": 748,
											"end": 752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 763,
											"end": 772,
											"name": "DUP1"
										},
										{
											"begin": 807,
											"end": 811,
											"name": "DUP3"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "MLOAD"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "ADD"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "DUP1"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "DUP3"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "DUP1"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "MLOAD"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "SWAP1"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "ADD"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "SWAP1"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "DUP1"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "DUP4"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "SWAP1"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "ADD"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "SWAP2"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "SWAP1"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "MSTORE"
										},
										{
											"begin": 780,
											"end": 813,
											"name": "DUP1"
										},
										{
											"begin": 780,
											"end": 813,
											"name": "MLOAD"
										},
										{
											"begin": 780,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 780,
											"end": 813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 780,
											"end": 813,
											"name": "ADD"
										},
										{
											"begin": 780,
											"end": 813,
											"name": "KECCAK256"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "SHR"
										},
										{
											"begin": 763,
											"end": 814,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 814,
											"name": "POP"
										},
										{
											"begin": 839,
											"end": 849,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 839,
											"end": 849,
											"name": "SLOAD"
										},
										{
											"begin": 832,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 832,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 832,
											"end": 849,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 832,
											"end": 849,
											"name": "JUMPI"
										},
										{
											"begin": 832,
											"end": 849,
											"name": "INVALID"
										},
										{
											"begin": 832,
											"end": 849,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 832,
											"end": 849,
											"name": "JUMPDEST"
										},
										{
											"begin": 832,
											"end": 849,
											"name": "MOD"
										},
										{
											"begin": 824,
											"end": 849,
											"name": "SWAP2"
										},
										{
											"begin": 824,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 824,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 678,
											"end": 856,
											"name": "SWAP2"
										},
										{
											"begin": 678,
											"end": 856,
											"name": "SWAP1"
										},
										{
											"begin": 678,
											"end": 856,
											"name": "POP"
										},
										{
											"begin": 678,
											"end": 856,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 672,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 423,
											"end": 672,
											"name": "JUMPDEST"
										},
										{
											"begin": 497,
											"end": 504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 507,
											"end": 514,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "MLOAD"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "DUP1"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "ADD"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "MSTORE"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 532,
											"name": "DUP7"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "DUP2"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "MSTORE"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "ADD"
										},
										{
											"begin": 534,
											"end": 538,
											"name": "DUP6"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "DUP2"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "MSTORE"
										},
										{
											"begin": 520,
											"end": 539,
											"name": "POP"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "DUP3"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SUB"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "MSTORE"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "KECCAK256"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "MUL"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "ADD"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP2"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP3"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP2"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP2"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "POP"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "DUP3"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "ADD"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "MLOAD"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "ADD"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "DUP1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "MLOAD"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "ADD"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP3"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP2"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SWAP1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "JUMPDEST"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "POP"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "DUP3"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "ADD"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "MLOAD"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "ADD"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "SSTORE"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "POP"
										},
										{
											"begin": 507,
											"end": 540,
											"name": "POP"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SUB"
										},
										{
											"begin": 497,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "CALLER"
										},
										{
											"begin": 554,
											"end": 567,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 554,
											"end": 571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 568,
											"end": 570,
											"name": "DUP4"
										},
										{
											"begin": 554,
											"end": 571,
											"name": "DUP2"
										},
										{
											"begin": 554,
											"end": 571,
											"name": "MSTORE"
										},
										{
											"begin": 554,
											"end": 571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 554,
											"end": 571,
											"name": "ADD"
										},
										{
											"begin": 554,
											"end": 571,
											"name": "SWAP1"
										},
										{
											"begin": 554,
											"end": 571,
											"name": "DUP2"
										},
										{
											"begin": 554,
											"end": 571,
											"name": "MSTORE"
										},
										{
											"begin": 554,
											"end": 571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 554,
											"end": 571,
											"name": "ADD"
										},
										{
											"begin": 554,
											"end": 571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 554,
											"end": 571,
											"name": "KECCAK256"
										},
										{
											"begin": 554,
											"end": 571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "EXP"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "DUP2"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "SLOAD"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "DUP2"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "MUL"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "NOT"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "AND"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "SWAP1"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "DUP4"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "AND"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "MUL"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "OR"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "SWAP1"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "SSTORE"
										},
										{
											"begin": 554,
											"end": 584,
											"name": "POP"
										},
										{
											"begin": 594,
											"end": 610,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 611,
											"end": 621,
											"name": "CALLER"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "AND"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "AND"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "DUP2"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "MSTORE"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "ADD"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "SWAP1"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "DUP2"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "MSTORE"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "ADD"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "KECCAK256"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "DUP2"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "SLOAD"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "DUP1"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "SWAP3"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "SWAP2"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "SWAP1"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "ADD"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "SWAP2"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "SWAP1"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "POP"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "SSTORE"
										},
										{
											"begin": 594,
											"end": 624,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH",
											"value": "88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7"
										},
										{
											"begin": 649,
											"end": 651,
											"name": "DUP2"
										},
										{
											"begin": 653,
											"end": 658,
											"name": "DUP5"
										},
										{
											"begin": 660,
											"end": 664,
											"name": "DUP5"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "MLOAD"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP5"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "MSTORE"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "ADD"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "ADD"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP4"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "MSTORE"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "ADD"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP3"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SUB"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP3"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "MSTORE"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP5"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "MLOAD"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "MSTORE"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "ADD"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SWAP2"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "MLOAD"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SWAP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "ADD"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SWAP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP4"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SWAP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SWAP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "ADD"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SWAP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "AND"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "ISZERO"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "JUMPI"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP3"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SUB"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "MLOAD"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP4"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SUB"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "EXP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SUB"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "NOT"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "AND"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "MSTORE"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "ADD"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SWAP2"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "JUMPDEST"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SWAP5"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "MLOAD"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "DUP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SWAP2"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SUB"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "SWAP1"
										},
										{
											"begin": 639,
											"end": 665,
											"name": "LOG1"
										},
										{
											"begin": 423,
											"end": 672,
											"name": "POP"
										},
										{
											"begin": 423,
											"end": 672,
											"name": "POP"
										},
										{
											"begin": 423,
											"end": 672,
											"name": "POP"
										},
										{
											"begin": 423,
											"end": 672,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1779,
											"end": 1948,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1779,
											"end": 1948,
											"name": "JUMPDEST"
										},
										{
											"begin": 1868,
											"end": 1869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1848,
											"end": 1870,
											"name": "AND"
										},
										{
											"begin": 1848,
											"end": 1856,
											"name": "DUP2"
										},
										{
											"begin": 1848,
											"end": 1870,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1848,
											"end": 1870,
											"name": "AND"
										},
										{
											"begin": 1848,
											"end": 1870,
											"name": "EQ"
										},
										{
											"begin": 1848,
											"end": 1870,
											"name": "ISZERO"
										},
										{
											"begin": 1840,
											"end": 1871,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1840,
											"end": 1871,
											"name": "JUMPI"
										},
										{
											"begin": 1840,
											"end": 1871,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1871,
											"name": "DUP1"
										},
										{
											"begin": 1840,
											"end": 1871,
											"name": "REVERT"
										},
										{
											"begin": 1840,
											"end": 1871,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1840,
											"end": 1871,
											"name": "JUMPDEST"
										},
										{
											"begin": 1911,
											"end": 1919,
											"name": "DUP1"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "AND"
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP1"
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "SLOAD"
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "EXP"
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DIV"
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "AND"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "AND"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "MLOAD"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "MLOAD"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "DUP1"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "SWAP2"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "SUB"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "SWAP1"
										},
										{
											"begin": 1882,
											"end": 1920,
											"name": "LOG3"
										},
										{
											"begin": 1935,
											"end": 1943,
											"name": "DUP1"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP1"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "EXP"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "DUP2"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "SLOAD"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "DUP2"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "MUL"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "NOT"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "AND"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "SWAP1"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "DUP4"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "AND"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "MUL"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "OR"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "SWAP1"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "SSTORE"
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "POP"
										},
										{
											"begin": 1779,
											"end": 1948,
											"name": "POP"
										},
										{
											"begin": 1779,
											"end": 1948,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SLOAD"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "AND"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "ISZERO"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "MUL"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SUB"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "AND"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DIV"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "KECCAK256"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DIV"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP3"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "LT"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "MLOAD"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "NOT"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "AND"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "OR"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP6"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SSTORE"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMP"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP6"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SSTORE"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "ISZERO"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP2"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "GT"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "ISZERO"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "MLOAD"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SSTORE"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP2"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP2"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMP"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP2"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP2"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "GT"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "ISZERO"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SSTORE"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMP"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMP"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 1068,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"createRandomZombie(string)": "7bff0a01",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"zombieToOwner(uint256)": "528b7b8f",
							"zombies(uint256)": "2052465e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"ZombieFactory.sol\":\"ZombieFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ZombieFactory.sol\":{\"keccak256\":\"0xd5df47d23f0e43b47156432b8bf1b80b6516b12c4f4132cd8fd42ff8676daf03\",\"urls\":[\"bzz-raw://d7bd9426d959c9b7ed6cae7b6873950a1cf83a43d6eaaa919ea968995a97a2a9\",\"dweb:/ipfs/QmdZTFpErTBGrg6cMuTWEmwv5gjVggZURSzW1JLEPYMpe8\"]},\"ownable.sol\":{\"keccak256\":\"0x6694abc0baa785b7f264982aa07d5fb7a13dab9e4e50e7710ecdbf1e72b4d022\",\"urls\":[\"bzz-raw://070fd800b9e6d326c14e755b1f4cd6b2a2ea4eaee3d6c448f24ebba77576b115\",\"dweb:/ipfs/QmV1mqW7ejRvXjyCGAcDmofzuot77fWMRXjGsKNXSvGbzn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 129,
								"contract": "ZombieFactory.sol:ZombieFactory",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 15,
								"contract": "ZombieFactory.sol:ZombieFactory",
								"label": "dnaDigits",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 20,
								"contract": "ZombieFactory.sol:ZombieFactory",
								"label": "dnaModulus",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 29,
								"contract": "ZombieFactory.sol:ZombieFactory",
								"label": "zombieToOwner",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 33,
								"contract": "ZombieFactory.sol:ZombieFactory",
								"label": "ownerZombieCount",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 36,
								"contract": "ZombieFactory.sol:ZombieFactory",
								"label": "zombies",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_struct(Zombie)25_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Zombie)25_storage)dyn_storage": {
								"base": "t_struct(Zombie)25_storage",
								"encoding": "dynamic_array",
								"label": "struct ZombieFactory.Zombie[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Zombie)25_storage": {
								"encoding": "inplace",
								"label": "struct ZombieFactory.Zombie",
								"members": [
									{
										"astId": 22,
										"contract": "ZombieFactory.sol:ZombieFactory",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 24,
										"contract": "ZombieFactory.sol:ZombieFactory",
										"label": "dna",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"renounceOwnership()": {
								"notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
							}
						}
					}
				}
			},
			"ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \"user permissions\".",
						"methods": {
							"constructor": {
								"details": "The Ownable constructor sets the original `owner` of the contract to the sender account."
							},
							"isOwner()": {
								"return": "true if `msg.sender` is the owner of the contract."
							},
							"owner()": {
								"return": "the address of the owner."
							},
							"renounceOwnership()": {
								"details": "Allows the current owner to relinquish control of the contract."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Ownable"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \\\"user permissions\\\".\",\"methods\":{\"constructor\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender account.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ownable.sol\":{\"keccak256\":\"0x6694abc0baa785b7f264982aa07d5fb7a13dab9e4e50e7710ecdbf1e72b4d022\",\"urls\":[\"bzz-raw://070fd800b9e6d326c14e755b1f4cd6b2a2ea4eaee3d6c448f24ebba77576b115\",\"dweb:/ipfs/QmV1mqW7ejRvXjyCGAcDmofzuot77fWMRXjGsKNXSvGbzn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 129,
								"contract": "ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {
							"renounceOwnership()": {
								"notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
							}
						}
					}
				}
			}
		},
		"sources": {
			"ZombieFactory.sol": {
				"ast": {
					"absolutePath": "ZombieFactory.sol",
					"exportedSymbols": {
						"ZombieFactory": [
							125
						]
					},
					"id": 126,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"absolutePath": "ownable.sol",
							"file": "./ownable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 235,
							"src": "33:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 234,
										"src": "84:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$234",
											"typeString": "contract Ownable"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "84:7:0"
								}
							],
							"contractDependencies": [
								234
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 125,
							"linearizedBaseContracts": [
								125,
								234
							],
							"name": "ZombieFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 12,
									"name": "NewZombie",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"indexed": false,
												"name": "zombieId",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "115:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "115:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": false,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "130:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 7,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "130:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"name": "dna",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "143:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "143:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "114:38:0"
									},
									"src": "99:54:0"
								},
								{
									"constant": false,
									"id": 15,
									"name": "dnaDigits",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "159:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 13,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "159:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3136",
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "176:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16_by_1",
											"typeString": "int_const 16"
										},
										"value": "16"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"name": "dnaModulus",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "184:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 16,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "184:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 17,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "202:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"id": 18,
											"name": "dnaDigits",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 15,
											"src": "208:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "202:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "ZombieFactory.Zombie",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 22,
											"name": "name",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "248:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 21,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "248:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"name": "dna",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "269:8:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 23,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "269:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Zombie",
									"nodeType": "StructDefinition",
									"scope": 125,
									"src": "224:60:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "zombieToOwner",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "290:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 26,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "299:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "290:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "307:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 33,
									"name": "ownerZombieCount",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "343:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 32,
										"keyType": {
											"id": 30,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "352:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "343:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 31,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "363:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 36,
									"name": "zombies",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "393:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Zombie_$25_storage_$dyn_storage",
										"typeString": "struct ZombieFactory.Zombie[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 34,
											"name": "Zombie",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 25,
											"src": "393:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Zombie_$25_storage_ptr",
												"typeString": "struct ZombieFactory.Zombie"
											}
										},
										"id": 35,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "393:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Zombie_$25_storage_$dyn_storage_ptr",
											"typeString": "struct ZombieFactory.Zombie[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "487:185:0",
										"statements": [
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"name": "id",
														"nodeType": "VariableDeclaration",
														"scope": 74,
														"src": "497:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "497:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 48,
																		"name": "_name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "527:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 49,
																		"name": "_dna",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "534:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 47,
																	"name": "Zombie",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "520:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_Zombie_$25_storage_ptr_$",
																		"typeString": "type(struct ZombieFactory.Zombie storage pointer)"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "520:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Zombie_$25_memory",
																	"typeString": "struct ZombieFactory.Zombie memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Zombie_$25_memory",
																	"typeString": "struct ZombieFactory.Zombie memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 45,
																"name": "zombies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "507:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Zombie_$25_storage_$dyn_storage",
																	"typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "push",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "507:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Zombie_$25_storage_$returns$_t_uint256_$",
																"typeString": "function (struct ZombieFactory.Zombie storage ref) returns (uint256)"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "507:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "543:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "507:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "497:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 55,
															"name": "zombieToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "554:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 57,
														"indexExpression": {
															"argumentTypes": null,
															"id": 56,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "568:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "554:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 58,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "574:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "574:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "554:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "554:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "594:30:0",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 62,
															"name": "ownerZombieCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "594:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 65,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 63,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "611:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "611:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "594:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "594:30:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 69,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "649:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 70,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "653:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 71,
															"name": "_dna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "660:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 68,
														"name": "NewZombie",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "639:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,string memory,uint256)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "639:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "EmitStatement",
												"src": "634:31:0"
											}
										]
									},
									"documentation": null,
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_createZombie",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "446:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 37,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "446:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"name": "_dna",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "467:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "445:32:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "487:0:0"
									},
									"scope": 125,
									"src": "423:249:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "753:103:0",
										"statements": [
											{
												"assignments": [
													83
												],
												"declarations": [
													{
														"constant": false,
														"id": 83,
														"name": "rand",
														"nodeType": "VariableDeclaration",
														"scope": 97,
														"src": "763:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 82,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "763:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 88,
																			"name": "_str",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "807:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 86,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 236,
																			"src": "790:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "790:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "790:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 85,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "780:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "780:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "775:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": "uint"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "775:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "763:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 93,
														"name": "rand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "832:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 94,
														"name": "dnaModulus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "839:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "832:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 96,
												"nodeType": "Return",
												"src": "824:25:0"
											}
										]
									},
									"documentation": null,
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_generateRandomDna",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"name": "_str",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "706:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "706:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:20:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "748:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "748:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "747:6:0"
									},
									"scope": 125,
									"src": "678:178:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "918:146:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 104,
																	"name": "ownerZombieCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "936:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 107,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 105,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "953:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "953:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "936:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "966:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "936:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															253
														],
														"referencedDeclaration": 252,
														"src": "928:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "928:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "928:40:0"
											},
											{
												"assignments": [
													113
												],
												"declarations": [
													{
														"constant": false,
														"id": 113,
														"name": "randDna",
														"nodeType": "VariableDeclaration",
														"scope": 123,
														"src": "978:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 112,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "978:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 115,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "1012:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 114,
														"name": "_generateRandomDna",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "993:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (string memory) view returns (uint256)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "993:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "978:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 119,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "1042:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 120,
															"name": "randDna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1049:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 118,
														"name": "_createZombie",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "1028:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1028:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "1028:29:0"
											}
										]
									},
									"documentation": null,
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createRandomZombie",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "890:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 99,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "890:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "889:21:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:0:0"
									},
									"scope": 125,
									"src": "862:202:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 126,
							"src": "58:1010:0"
						}
					],
					"src": "0:1068:0"
				},
				"id": 0
			},
			"ownable.sol": {
				"ast": {
					"absolutePath": "ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							234
						]
					},
					"id": 235,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 127,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
							"fullyImplemented": true,
							"id": 234,
							"linearizedBaseContracts": [
								234
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 129,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 234,
									"src": "240:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 128,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "240:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 135,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "299:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "334:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "293:69:1"
									},
									"src": "267:96:1"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "503:81:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 138,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "509:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 139,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "518:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "518:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "509:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "509:19:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "568:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "560:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "560:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 147,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "572:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 143,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "539:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "539:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "EmitStatement",
												"src": "534:45:1"
											}
										]
									},
									"documentation": "@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.",
									"id": 151,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "491:2:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:0:1"
									},
									"scope": 234,
									"src": "480:104:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "683:24:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 156,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 129,
													"src": "696:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 155,
												"id": 157,
												"nodeType": "Return",
												"src": "689:13:1"
											}
										]
									},
									"documentation": "@return the address of the owner.",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:2:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "674:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "673:9:1"
									},
									"scope": 234,
									"src": "637:70:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "806:36:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 162,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "820:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "820:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															253
														],
														"referencedDeclaration": 252,
														"src": "812:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "812:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "812:18:1"
											},
											{
												"id": 166,
												"nodeType": "PlaceholderStatement",
												"src": "836:1:1"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 168,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:2:1"
									},
									"src": "785:57:1",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "965:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 173,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "978:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "978:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "992:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "978:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 172,
												"id": 177,
												"nodeType": "Return",
												"src": "971:27:1"
											}
										]
									},
									"documentation": "@return true if `msg.sender` is the owner of the contract.",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "936:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "959:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "959:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "958:6:1"
									},
									"scope": 234,
									"src": "920:83:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "1308:81:1",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 185,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "1340:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1356:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1348:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1348:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 184,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "1319:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1319:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "1314:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 191,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "1365:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1382:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1374:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1374:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1365:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "1365:19:1"
											}
										]
									},
									"documentation": "@dev Allows the current owner to relinquish control of the contract.\n@notice Renouncing to ownership will leave the contract without an owner.\nIt will not be possible to call the functions with the `onlyOwner`\nmodifier anymore.",
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 182,
											"modifierName": {
												"argumentTypes": null,
												"id": 181,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 168,
												"src": "1298:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1298:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:2:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1308:0:1"
									},
									"scope": 234,
									"src": "1262:127:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "1609:39:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 206,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "1634:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 205,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "1615:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1615:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "1615:28:1"
											}
										]
									},
									"documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param newOwner The address to transfer ownership to.",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 203,
											"modifierName": {
												"argumentTypes": null,
												"id": 202,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 168,
												"src": "1599:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1599:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1574:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1573:18:1"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1609:0:1"
									},
									"scope": 234,
									"src": "1547:101:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "1834:114:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 216,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "1848:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1868:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1860:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1860:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1848:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															253
														],
														"referencedDeclaration": 252,
														"src": "1840:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1840:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "1840:31:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 224,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "1903:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 225,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "1911:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 223,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "1882:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1882:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "EmitStatement",
												"src": "1877:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 228,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "1926:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 229,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "1935:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1926:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "1926:17:1"
											}
										]
									},
									"documentation": "@dev Transfers control of the contract to a newOwner.\n@param newOwner The address to transfer ownership to.",
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1807:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1806:18:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:1"
									},
									"scope": 234,
									"src": "1779:169:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 235,
							"src": "219:1731:1"
						}
					],
					"src": "0:1951:1"
				},
				"id": 1
			}
		}
	}
}